<!DOCTYPE html>
<html lang="en">
<!--
  **NOTE:** This is a template for index.html. It uses ejs and htmlWebpackPlugin to generate a different index.html for each environment. htmlWebpackPlugin will dynamically add references to the scripts and styles that it bundles to this file. The generated bundles have hash-based filenames, so it's necessary to add the references dynamically.
  For more info on ejs, see http://www.embeddedjs.com/. For examples of using it with htmlWebpackPlugin, see https://github.com/jaketrent/html-webpack-template/blob/master/index.ejs
  -->

<head>
  <!--
    The htmlWebpackPlugin will parse the logic below so that trackJS is only added to the production version of index.html (since only webpack.config.prod.js provides the trackJS token)
    This is an example of how to add features to index.html for only one environment.
    To track JavaScript errors via TrackJS, sign up for a free trial at TrackJS.com and enter your token in /webpack.config.prod.js on line 55.
   -->
  <% if (htmlWebpackPlugin.options.trackJSToken) { %>
    <script>window._trackJs = { token: '<%= htmlWebpackPlugin.options.trackJSToken %>' };</script>
    <script src="https://d2zah9y47r7bi2.cloudfront.net/releases/current/tracker.js"></script>
    <% } %>
      <script src="https://s3.amazonaws.com/cds-tzn-test/resources/cds-process.min.js"></script>
      <script>
        var logMe = messageToLog => valueToLog => console.warn(
          messageToLog,
          ' : ',
          (undefined !== valueToLog) && valueToLog
        );
        var logThings = message => console.warn({
          '    responseCode': responseCode.value,
          '    message': message,
          '    cipher': document.querySelector('[data-cds = "cipher"]').value,
          '    cardType': document.querySelector('[data-cds = "cardType"]').value,
          '    ccNumber': document.querySelector('[data-cds = "ccNumber"]').value,
          '    reportedEncryptionResponse': CDS.cdsProcess.reportedEncryptionResponse,
          '    clientCode()': CDS.cdsProcess.clientCode(),
          '    cdsCard': CDS.cdsProcess.cdsCard,
          '---------  Thats all folks ': '---------'
        });
        logMe('Ready....')('Go!');

        CDS.cdsProcess.allowedCards = ['MC', 'VI', 'AX', 'DI', 'DC', 'JCB'];
        CDS.cdsProcess.clientCode('abc');

        setTimeout(function () { handleValidationDisplay(); }, 2000);
        setTimeout(function () { handleValidationDisplay(); }, 3000);
        setTimeout(function () { handleValidationDisplay(); }, 5000);
        document.addEventListener(
          "DOMContentLoaded",
          function () {
            if (document.querySelector('[data-cds =     responseCode"]').value == "075") {
              handleValidationDisplay();
              //Appropriate client desired handler can be defined
            }
            document.querySelector('input[data-cds = "responseCode"]').addEventListener('change', function () {
              handleValidationDisplay();
              //Appropriate client desired handlercan be defined
            });
          });

        CDS.cdsProcess.cdsCard.addEventListener(
          'cdsCardValChange',
          function (cdsResponse) {
            if (
              document.readyState === "complete"
              || (document.readyState !== "loading" && !document.documentElement.doScroll)
            ) {
              handleValidationDisplay(cdsResponse);
              //Appropriate client desired handler can be defined
            } else {
              document.addEventListener("DOMContentLoaded", function () {
                handleValidationDisplay(cdsResponse);
                //Appropriate client desired handlercan be defined
              });
            }
          });

      </script>

      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta charset="utf-8" />
      <title>React Slingshot</title>
</head>

<body>
  <div id="app"></div>
</body>

</html>
